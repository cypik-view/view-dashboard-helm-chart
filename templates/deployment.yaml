apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      initContainers:
        - name: wait-for-dependencies
          image: busybox
          command: [ 'sh', '-c', 'until nc -z mysql 3306 && nc -z rabbitmq 5672; do echo waiting; sleep 2; done;' ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 80
          env:
            - name: NODE_ENV
              value: "{{ .Values.env.NODE_ENV }}"
            - name: GUID
              value: "{{ .Values.env.GUID }}"
          volumeMounts:
            - name: view-json
              mountPath: /usr/share/nginx/html/view.json
              subPath: view.json
            - name: logs
              mountPath: /var/log/nginx
      restartPolicy: {{ .Values.restartPolicy }}
      volumes:
        - name: view-json
          configMap:
            name: {{ .Release.Name }}-config
        - name: logs
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-logs
